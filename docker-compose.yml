services:
  feature_server:
    container_name: feature_server
    build:
      context: ./feature_repo
    volumes:
      - ./feature_repo/offline_data:/app/offline_data
    depends_on:
      registry:
        condition: service_healthy
      mysql:
        condition: service_started
    ports:
      - "6566:6566"
    links:
      - registry
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:6566/health}"
      interval: "5s"
      retries: 5
    restart: unless-stopped

  kafka_consumer:
    build:
      context: ./streaming/kafka_consumer
    volumes:
      - ./feature_repo/offline_data:/app/offline_data
      - ./logs:/app/logs # access on csv log
    container_name: kafka_consumer
    depends_on:
      broker-1:
        condition: service_healthy
      feature_server:
        condition: service_healthy
      kafka_producer:
        condition: service_started
    environment:
      - KAFKA_BROKER=broker:9092
      - FEAST_REPO_PATH=/app/feature_repo
      - FEATURE_VIEW_NAME=${FEATURE_VIEW_NAME}
      - ROWS=${ROWS}
      - ENTITY_PER_SECOND=${ENTITY_PER_SECOND}
      - PROCESSING_INTERVAL=${PROCESSING_INTERVAL}
      - PROCESSING_START=${PROCESSING_START}
    restart: no

  spark_ingestor:
    build:
      context: ./streaming/spark_processor
      dockerfile: ./Dockerfile
    volumes:
      - ./feature_repo/offline_data:/app/offline_data
    environment:
      - FEATURE_VIEW_NAME=${FEATURE_VIEW_NAME}
      - PROCESSING_INTERVAL=${PROCESSING_INTERVAL}
    container_name: spark_ingestor
    depends_on:
      broker-1:
        condition: service_started
      feature_server:
        condition: service_healthy
      kafka_producer:
        condition: service_started
    restart: unless-stopped

  kafka_producer:
    build:
      context: streaming/kafka_producer
      dockerfile: ./Dockerfile
    container_name: kafka_producer
    depends_on:
      broker-1:
        condition: service_healthy
      feature_server:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=broker:9092
      - FEATURES=${FEATURES}
      - ROWS=${ROWS}
      - ENTITY_PER_SECOND=${ENTITY_PER_SECOND}
      - PROCESSING_START=${PROCESSING_START}
    volumes:
      - ./feature_repo/offline_data:/app/offline_data
    restart: no

  registry:
    container_name: registry
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=feast
    ports:
      - "55001:5432"
    volumes:
      # Separate data and configuration volumes
      - ./feast-postgres-registry:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    restart: unless-stopped
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf
      -c listen_addresses='*'
      -c max_connections=200
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  mysql:
    image: mysql:8
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysecretpassword
      MYSQL_DATABASE: feast_online
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  broker-1:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "broker-1:9092", "--list" ]
      interval: 10s
      retries: 5
      start_period: 20s
    restart: unless-stopped

volumes:
  mysql_data: